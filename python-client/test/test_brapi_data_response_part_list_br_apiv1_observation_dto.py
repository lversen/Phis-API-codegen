# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.brapi_data_response_part_list_br_apiv1_observation_dto import BrapiDataResponsePartListBrAPIv1ObservationDTO

class TestBrapiDataResponsePartListBrAPIv1ObservationDTO(unittest.TestCase):
    """BrapiDataResponsePartListBrAPIv1ObservationDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BrapiDataResponsePartListBrAPIv1ObservationDTO:
        """Test BrapiDataResponsePartListBrAPIv1ObservationDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BrapiDataResponsePartListBrAPIv1ObservationDTO`
        """
        model = BrapiDataResponsePartListBrAPIv1ObservationDTO()
        if include_optional:
            return BrapiDataResponsePartListBrAPIv1ObservationDTO(
                data = [
                    openapi_client.models.br_apiv1_observation_dto.BrAPIv1ObservationDTO(
                        germplasm_db_id = '', 
                        germplasm_name = '', 
                        observation_db_id = '', 
                        observation_level = '', 
                        observation_time_stamp = '', 
                        observation_unit_db_id = '', 
                        observation_unit_name = '', 
                        observation_variable_db_id = '', 
                        observation_variable_name = '', 
                        operator = '', 
                        season = openapi_client.models.br_apiv1_season_dto.BrAPIv1SeasonDTO(
                            season_db_id = '', 
                            year = '', ), 
                        study_db_id = '', 
                        uploaded_by = '', 
                        value = '', )
                    ]
            )
        else:
            return BrapiDataResponsePartListBrAPIv1ObservationDTO(
        )
        """

    def testBrapiDataResponsePartListBrAPIv1ObservationDTO(self):
        """Test BrapiDataResponsePartListBrAPIv1ObservationDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
