# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.front_config_dto import FrontConfigDTO

class TestFrontConfigDTO(unittest.TestCase):
    """FrontConfigDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FrontConfigDTO:
        """Test FrontConfigDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FrontConfigDTO`
        """
        model = FrontConfigDTO()
        if include_optional:
            return FrontConfigDTO(
                path_prefix = 'app',
                home_component = 'opensilex-DefaultHomeComponent',
                not_found_component = 'opensilex-DefaultNotFoundComponent',
                header_component = 'opensilex-DefaultHeaderComponent',
                login_component = 'opensilex-DefaultLoginComponent',
                menu_component = 'opensilex-DefaultMenuComponent',
                footer_component = 'opensilex-DefaultFooterComponent',
                routes = [
                    openapi_client.models.route_dto.RouteDTO(
                        path = '/users', 
                        component = 'opensilex.AccountList', 
                        credentials = [
                            ''
                            ], 
                        icon = 'ik#ik-target', 
                        title = 'component.menu.scientificObjects', 
                        description = 'ScientificObjectList.description', 
                        rdf_type = 'vocabulary:ScientificObject', )
                    ],
                theme_module = '',
                theme_name = '',
                open_id_authentication_uri = '',
                open_id_connection_title = '',
                saml_proxy_login_uri = '',
                saml_connection_title = '',
                activate_reset_password = True,
                geocoding_service = '',
                menu_exclusions = [
                    ''
                    ],
                version_label = 'DEVELOP',
                application_name = '',
                connect_as_guest = True,
                dashboard = openapi_client.models.dashboard_config_dto.DashboardConfigDTO(
                    show_metrics = True, 
                    graph1 = openapi_client.models.graph_config_dto.GraphConfigDTO(
                        variable = '', 
                        data_location_informations = '', ), 
                    graph2 = openapi_client.models.graph_config_dto.GraphConfigDTO(
                        variable = '', 
                        data_location_informations = '', ), 
                    graph3 = , ),
                gdpr_file_is_configured = True,
                matomo = openapi_client.models.matomo_config_dto.MatomoConfigDTO(
                    server_url = '', 
                    site_id = 56, ),
                notification_message = deployment of version 1.2 on January 22, 2024,
                notification_color_theme = 'Warning',
                notification_end_date = 'Wed May 01 02:00:00 CEST 2024',
                agroportal = openapi_client.models.agroportal_ontologies_config_dto.AgroportalOntologiesConfigDTO(
                    entity_ontologies = [
                        ''
                        ], 
                    trait_ontologies = [
                        ''
                        ], 
                    method_ontologies = [
                        ''
                        ], 
                    unit_ontologies = [
                        ''
                        ], )
            )
        else:
            return FrontConfigDTO(
                path_prefix = 'app',
                home_component = 'opensilex-DefaultHomeComponent',
                not_found_component = 'opensilex-DefaultNotFoundComponent',
                header_component = 'opensilex-DefaultHeaderComponent',
                login_component = 'opensilex-DefaultLoginComponent',
                menu_component = 'opensilex-DefaultMenuComponent',
                footer_component = 'opensilex-DefaultFooterComponent',
                routes = [
                    openapi_client.models.route_dto.RouteDTO(
                        path = '/users', 
                        component = 'opensilex.AccountList', 
                        credentials = [
                            ''
                            ], 
                        icon = 'ik#ik-target', 
                        title = 'component.menu.scientificObjects', 
                        description = 'ScientificObjectList.description', 
                        rdf_type = 'vocabulary:ScientificObject', )
                    ],
        )
        """

    def testFrontConfigDTO(self):
        """Test FrontConfigDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
