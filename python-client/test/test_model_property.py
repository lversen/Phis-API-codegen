# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.model_property import ModelProperty

class TestModelProperty(unittest.TestCase):
    """ModelProperty unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelProperty:
        """Test ModelProperty
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelProperty`
        """
        model = ModelProperty()
        if include_optional:
            return ModelProperty(
                local_name = '',
                name_space = '',
                var_property = True,
                ordinal = 56,
                id = openapi_client.models.anon_id.AnonId(
                    blank_node_id = openapi_client.models.blank_node_id.BlankNodeId(
                        label_string = '', ), 
                    label_string = '', ),
                uri = '',
                stmt_term = openapi_client.models.statement.Statement(
                    boolean = True, 
                    byte = 'YQ==', 
                    short = 56, 
                    char = '', 
                    int = 56, 
                    long = 56, 
                    float = 1.337, 
                    double = 1.337, 
                    resource = openapi_client.models.resource.Resource(
                        id = openapi_client.models.anon_id.AnonId(
                            blank_node_id = openapi_client.models.blank_node_id.BlankNodeId(
                                label_string = '', ), 
                            label_string = '', ), 
                        uri = '', 
                        local_name = '', 
                        name_space = '', 
                        model = openapi_client.models.model.Model(
                            empty = True, 
                            closed = True, 
                            reader = openapi_client.models.rdf_reader_i.RDFReaderI(), 
                            lock = openapi_client.models.lock.Lock(), 
                            writer = openapi_client.models.rdf_writer_i.RDFWriterI(), 
                            graph = openapi_client.models.graph.Graph(
                                empty = True, 
                                closed = True, 
                                prefix_mapping = openapi_client.models.prefix_mapping.PrefixMapping(
                                    ns_prefix_map = {
                                        'key' : ''
                                        }, ), 
                                transaction_handler = openapi_client.models.transaction_handler.TransactionHandler(), 
                                event_manager = openapi_client.models.graph_event_manager.GraphEventManager(), 
                                capabilities = openapi_client.models.capabilities.Capabilities(), ), 
                            ns_prefix_map = {
                                'key' : ''
                                }, ), 
                        literal = True, 
                        anon = True, 
                        uriresource = True, 
                        stmt_resource = True, ), 
                    object = openapi_client.models.rdf_node.RDFNode(
                        literal = True, 
                        anon = True, 
                        uriresource = True, 
                        stmt_resource = True, ), 
                    language = '', 
                    string = '', 
                    list = openapi_client.models.rdf_list.RDFList(
                        empty = True, 
                        strict = True, 
                        valid = True, 
                        validity_error_message = '', 
                        head = openapi_client.models.rdf_node.RDFNode(
                            literal = True, 
                            anon = True, 
                            uriresource = True, 
                            stmt_resource = True, ), 
                        tail = openapi_client.models.rdf_list.RDFList(
                            empty = True, 
                            strict = True, 
                            valid = True, 
                            validity_error_message = '', 
                            uri = '', 
                            local_name = '', 
                            name_space = '', 
                            literal = True, 
                            anon = True, 
                            uriresource = True, 
                            stmt_resource = True, ), 
                        uri = '', 
                        local_name = '', 
                        name_space = '', 
                        literal = True, 
                        anon = True, 
                        uriresource = True, 
                        stmt_resource = True, ), 
                    model = openapi_client.models.model.Model(
                        empty = True, 
                        closed = True, ), 
                    subject = openapi_client.models.resource.Resource(
                        uri = '', 
                        local_name = '', 
                        name_space = '', 
                        literal = True, 
                        anon = True, 
                        uriresource = True, 
                        stmt_resource = True, ), 
                    literal = openapi_client.models.literal.Literal(
                        boolean = True, 
                        byte = 'YQ==', 
                        short = 56, 
                        char = '', 
                        int = 56, 
                        long = 56, 
                        float = 1.337, 
                        double = 1.337, 
                        value = openapi_client.models.value.value(), 
                        language = '', 
                        string = '', 
                        well_formed_xml = True, 
                        datatype = openapi_client.models.rdf_datatype.RDFDatatype(
                            uri = '', ), 
                        datatype_uri = '', 
                        lexical_form = '', 
                        anon = True, 
                        uriresource = True, 
                        stmt_resource = True, ), 
                    bag = openapi_client.models.bag.Bag(
                        alt = True, 
                        seq = True, 
                        uri = '', 
                        local_name = '', 
                        name_space = '', 
                        anon = True, 
                        uriresource = True, 
                        stmt_resource = True, ), 
                    alt = openapi_client.models.alt.Alt(
                        default = , 
                        default_language = '', 
                        default_resource = , 
                        default_literal = openapi_client.models.literal.Literal(
                            boolean = True, 
                            byte = 'YQ==', 
                            short = 56, 
                            char = '', 
                            int = 56, 
                            long = 56, 
                            float = 1.337, 
                            double = 1.337, 
                            value = openapi_client.models.value.value(), 
                            language = '', 
                            string = '', 
                            well_formed_xml = True, 
                            datatype_uri = '', 
                            lexical_form = '', 
                            anon = True, 
                            uriresource = True, 
                            stmt_resource = True, ), 
                        default_boolean = True, 
                        default_byte = 'YQ==', 
                        default_short = 56, 
                        default_int = 56, 
                        default_long = 56, 
                        default_char = '', 
                        default_float = 1.337, 
                        default_double = 1.337, 
                        default_string = '', 
                        default_alt = openapi_client.models.alt.Alt(
                            default_language = '', 
                            default_boolean = True, 
                            default_byte = 'YQ==', 
                            default_short = 56, 
                            default_int = 56, 
                            default_long = 56, 
                            default_char = '', 
                            default_float = 1.337, 
                            default_double = 1.337, 
                            default_string = '', 
                            default_bag = openapi_client.models.bag.Bag(
                                seq = True, 
                                uri = '', 
                                local_name = '', 
                                name_space = '', 
                                anon = True, 
                                uriresource = True, 
                                stmt_resource = True, ), 
                            default_seq = openapi_client.models.seq.Seq(
                                seq = True, 
                                uri = '', 
                                local_name = '', 
                                name_space = '', 
                                anon = True, 
                                uriresource = True, 
                                stmt_resource = True, ), 
                            seq = True, 
                            uri = '', 
                            local_name = '', 
                            name_space = '', 
                            anon = True, 
                            uriresource = True, 
                            stmt_resource = True, ), 
                        default_bag = , 
                        default_seq = openapi_client.models.seq.Seq(
                            seq = True, 
                            uri = '', 
                            local_name = '', 
                            name_space = '', 
                            anon = True, 
                            uriresource = True, 
                            stmt_resource = True, ), 
                        seq = True, 
                        uri = '', 
                        local_name = '', 
                        name_space = '', 
                        anon = True, 
                        uriresource = True, 
                        stmt_resource = True, ), 
                    seq = , 
                    predicate = openapi_client.models.property.Property(
                        local_name = '', 
                        name_space = '', 
                        property = True, 
                        ordinal = 56, 
                        uri = '', 
                        anon = True, 
                        uriresource = True, 
                        stmt_resource = True, ), 
                    reified = True, ),
                resource = True,
                model = openapi_client.models.model.Model(
                    empty = True, 
                    closed = True, 
                    reader = openapi_client.models.rdf_reader_i.RDFReaderI(), 
                    lock = openapi_client.models.lock.Lock(), 
                    writer = openapi_client.models.rdf_writer_i.RDFWriterI(), 
                    graph = openapi_client.models.graph.Graph(
                        empty = True, 
                        closed = True, 
                        prefix_mapping = openapi_client.models.prefix_mapping.PrefixMapping(
                            ns_prefix_map = {
                                'key' : ''
                                }, ), 
                        transaction_handler = openapi_client.models.transaction_handler.TransactionHandler(), 
                        event_manager = openapi_client.models.graph_event_manager.GraphEventManager(), 
                        capabilities = openapi_client.models.capabilities.Capabilities(), ), 
                    ns_prefix_map = {
                        'key' : ''
                        }, ),
                literal = True,
                anon = True,
                uriresource = True,
                stmt_resource = True
            )
        else:
            return ModelProperty(
        )
        """

    def testModelProperty(self):
        """Test ModelProperty"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
