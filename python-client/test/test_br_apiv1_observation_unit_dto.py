# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.br_apiv1_observation_unit_dto import BrAPIv1ObservationUnitDTO

class TestBrAPIv1ObservationUnitDTO(unittest.TestCase):
    """BrAPIv1ObservationUnitDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BrAPIv1ObservationUnitDTO:
        """Test BrAPIv1ObservationUnitDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BrAPIv1ObservationUnitDTO`
        """
        model = BrAPIv1ObservationUnitDTO()
        if include_optional:
            return BrAPIv1ObservationUnitDTO(
                block_number = '',
                entry_number = '',
                entry_type = '',
                germplasm_db_id = '',
                germplasm_name = '',
                location_db_id = '',
                location_name = '',
                observation_level = '',
                observation_unit_db_id = '',
                observation_unit_xref = [
                    openapi_client.models.br_apiv1_observation_unit_xref_dto.BrAPIv1ObservationUnitXrefDTO(
                        id = '', 
                        source = '', )
                    ],
                observations = [
                    openapi_client.models.br_apiv1_observation_summary_dto.BrAPIv1ObservationSummaryDTO(
                        collector = '', 
                        observation_db_id = '', 
                        observation_time_stamp = '', 
                        observation_variable_db_id = '', 
                        observation_variable_name = '', 
                        season = openapi_client.models.br_apiv1_season_dto.BrAPIv1SeasonDTO(
                            season_db_id = '', 
                            year = '', ), 
                        value = '', )
                    ],
                pedigree = '',
                plant_number = '',
                plot_number = '',
                position_coordinate_x = '',
                position_coordinate_x_type = '',
                position_coordinate_y = '',
                position_coordinate_y_type = '',
                program_db_id = '',
                program_name = '',
                replicate = '',
                study_db_id = '',
                study_name = '',
                treatments = [
                    openapi_client.models.br_apiv1_observation_unit_treatment_dto.BrAPIv1ObservationUnitTreatmentDTO(
                        factor = '', 
                        modality = '', )
                    ],
                trial_db_id = '',
                trial_name = ''
            )
        else:
            return BrAPIv1ObservationUnitDTO(
        )
        """

    def testBrAPIv1ObservationUnitDTO(self):
        """Test BrAPIv1ObservationUnitDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
