# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.br_apiv1_trait_dto import BrAPIv1TraitDTO

class TestBrAPIv1TraitDTO(unittest.TestCase):
    """BrAPIv1TraitDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BrAPIv1TraitDTO:
        """Test BrAPIv1TraitDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BrAPIv1TraitDTO`
        """
        model = BrAPIv1TraitDTO()
        if include_optional:
            return BrAPIv1TraitDTO(
                alternative_abbreviations = [
                    ''
                    ],
                attribute = '',
                description = '',
                entity = '',
                main_abbreviation = '',
                ontology_reference = openapi_client.models.br_apiv1_ontology_reference_dto.BrAPIv1OntologyReferenceDTO(
                    documentation_links = [
                        openapi_client.models.br_apiv1_documentation_link_dto.BrAPIv1DocumentationLinkDTO(
                            type = '', 
                            url = '', )
                        ], 
                    ontology_db_id = '', 
                    ontology_name = '', 
                    version = '', ),
                status = '',
                synonyms = [
                    ''
                    ],
                trait_db_id = '',
                trait_name = '',
                xref = '',
                var_class = ''
            )
        else:
            return BrAPIv1TraitDTO(
        )
        """

    def testBrAPIv1TraitDTO(self):
        """Test BrAPIv1TraitDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
