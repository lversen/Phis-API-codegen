# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.version_info_dto import VersionInfoDTO

class TestVersionInfoDTO(unittest.TestCase):
    """VersionInfoDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VersionInfoDTO:
        """Test VersionInfoDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VersionInfoDTO`
        """
        model = VersionInfoDTO()
        if include_optional:
            return VersionInfoDTO(
                title = 'PHIS',
                version = '1.0.0beta+2',
                description = 'OpenSILEX is an ontology-driven Information System designed for life science data.',
                contact = openapi_client.models.api_contact_info_dto.ApiContactInfoDTO(
                    name = 'Opensilex Team', 
                    email = 'opensilex@gmail.com', 
                    homepage = '', ),
                license = openapi_client.models.api_license_info_dto.ApiLicenseInfoDTO(
                    name = 'GNU Affero General Public License v3', 
                    url = 'https://www.gnu.org/licenses/agpl-3.0.fr.html', ),
                modules_version = [
                    openapi_client.models.api_modules_info.ApiModulesInfo(
                        name = 'opensilex-core', 
                        version = '1.0.0-beta+2', )
                    ],
                external_docs = openapi_client.models.api_external_docs_dto.ApiExternalDocsDTO(
                    description = 'Opensilex api docs', 
                    url = 'https://github.com/OpenSILEX/opensilex/blob/master/opensilex-doc/src/main/resources/index.md', ),
                api_docs = openapi_client.models.api_external_docs_dto.ApiExternalDocsDTO(
                    description = 'Opensilex api docs', 
                    url = 'https://github.com/OpenSILEX/opensilex/blob/master/opensilex-doc/src/main/resources/index.md', ),
                git_commit = openapi_client.models.api_git_commit_dto.ApiGitCommitDTO(
                    commit_id = '', 
                    commit_message = '', ),
                github_page = ''
            )
        else:
            return VersionInfoDTO(
        )
        """

    def testVersionInfoDTO(self):
        """Test VersionInfoDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
