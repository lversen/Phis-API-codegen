# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.germplasm_search_filter import GermplasmSearchFilter

class TestGermplasmSearchFilter(unittest.TestCase):
    """GermplasmSearchFilter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GermplasmSearchFilter:
        """Test GermplasmSearchFilter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GermplasmSearchFilter`
        """
        model = GermplasmSearchFilter()
        if include_optional:
            return GermplasmSearchFilter(
                included_uris = [
                    ''
                    ],
                rdf_types = [
                    ''
                    ],
                page = 56,
                lang = '',
                uri = 'http://opensilex/set/experiments/ZA17',
                name = '.*',
                code = '.*',
                species = 'http://www.phenome-fppn.fr/id/species/zeamays',
                variety = 'http://opensilex.test/id/germplasm/variety.huachano',
                accession = 'http://opensilex.test/id/germplasm/accession.v_a_x_v_b',
                institute = 'INRA',
                experiment = 'http://opensilex/experiment/id/ZA17',
                metadata = '{ "water_stress" : "resistant",
"yield" : "moderate"}',
                uris = [
                    ''
                    ],
                group = 'opensilex-sandbox:id/germplasmGroup/test',
                parent_germplasms = [
                    ''
                    ],
                parent_m_germplasms = [
                    ''
                    ],
                parent_f_germplasms = [
                    ''
                    ],
                order_by = name=asc,
                page_size = 56,
                rdf_type = 'http://www.opensilex.org/vocabulary/oeso#Variety',
                production_year = 2020
            )
        else:
            return GermplasmSearchFilter(
        )
        """

    def testGermplasmSearchFilter(self):
        """Test GermplasmSearchFilter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
