# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.variable_get_dto import VariableGetDTO

class TestVariableGetDTO(unittest.TestCase):
    """VariableGetDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VariableGetDTO:
        """Test VariableGetDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VariableGetDTO`
        """
        model = VariableGetDTO()
        if include_optional:
            return VariableGetDTO(
                uri = 'http://opensilex.dev/set/variables/Plant_Height',
                name = 'Plant_Height',
                entity = openapi_client.models.entity_get_dto.EntityGetDTO(
                    uri = 'http://opensilex.dev/set/variables/entity/Plant', 
                    name = 'Plant', ),
                entity_of_interest = openapi_client.models.named_resource_dto.NamedResourceDTO(
                    uri = '', 
                    name = '', 
                    rdf_type = '', 
                    rdf_type_name = '', 
                    publication_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                characteristic = openapi_client.models.characteristic_get_dto.CharacteristicGetDTO(
                    uri = 'http://opensilex.dev/set/variables/characteristic/Height', 
                    name = 'Height', ),
                method = openapi_client.models.method_get_dto.MethodGetDTO(
                    uri = 'http://opensilex.dev/set/variables/method/ImageAnalysis', 
                    name = 'ImageAnalysis', ),
                unit = openapi_client.models.unit_get_dto.UnitGetDTO(
                    uri = 'http://opensilex.dev/set/variables/unit/Centimeter', 
                    name = 'Centimeter', ),
                on_local = True,
                shared_resource_instance = openapi_client.models.shared_resource_instance_dto.SharedResourceInstanceDTO(
                    uri = '', 
                    api_url = '', 
                    label = '', ),
                alternative_name = ''
            )
        else:
            return VariableGetDTO(
        )
        """

    def testVariableGetDTO(self):
        """Test VariableGetDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
