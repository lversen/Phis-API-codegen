# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.position_get_dto import PositionGetDTO

class TestPositionGetDTO(unittest.TestCase):
    """PositionGetDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PositionGetDTO:
        """Test PositionGetDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PositionGetDTO`
        """
        model = PositionGetDTO()
        if include_optional:
            return PositionGetDTO(
                event = 'http://www.opensilex.org/move/12590c87-1c34-426b-a231-beb7acb33415',
                move_time = '2019-09-08T12:00:00+01:00',
                var_from = openapi_client.models.facility_named_dto.FacilityNamedDTO(
                    uri = 'http://opensilex.dev/greenHouseA', 
                    name = 'greenHouseA', ),
                to = openapi_client.models.facility_named_dto.FacilityNamedDTO(
                    uri = 'http://opensilex.dev/greenHouseA', 
                    name = 'greenHouseA', ),
                position = openapi_client.models.position_get_detail_dto.PositionGetDetailDTO(
                    point = null, 
                    x = '35', 
                    y = '76', 
                    z = '8611', 
                    text = 'Near the greenhouse door', )
            )
        else:
            return PositionGetDTO(
        )
        """

    def testPositionGetDTO(self):
        """Test PositionGetDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
