# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.csv_validation_dto import CSVValidationDTO

class TestCSVValidationDTO(unittest.TestCase):
    """CSVValidationDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CSVValidationDTO:
        """Test CSVValidationDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CSVValidationDTO`
        """
        model = CSVValidationDTO()
        if include_optional:
            return CSVValidationDTO(
                errors = openapi_client.models.csv_validation_model.CSVValidationModel(
                    missing_headers = [
                        ''
                        ], 
                    empty_headers = [
                        56
                        ], 
                    invalid_header_uris = {
                        'key' : ''
                        }, 
                    datatype_errors = {
                        'key' : [
                            openapi_client.models.csv_datatype_error.CSVDatatypeError(
                                row_index = 56, 
                                col_index = 56, 
                                header = '', 
                                value = '', 
                                datatype = '', 
                                message = '', )
                            ]
                        }, 
                    uri_not_found_errors = {
                        'key' : [
                            openapi_client.models.csvuri_not_found_error.CSVURINotFoundError(
                                row_index = 56, 
                                col_index = 56, 
                                header = '', 
                                value = '', 
                                rdf_type = '', 
                                object_uri = '', 
                                message = '', )
                            ]
                        }, 
                    invalid_uri_errors = {
                        'key' : [
                            openapi_client.models.csv_cell.CSVCell(
                                row_index = 56, 
                                col_index = 56, 
                                header = '', 
                                value = '', 
                                message = '', )
                            ]
                        }, 
                    missing_required_value_errors = {
                        'key' : [
                            openapi_client.models.csv_cell.CSVCell(
                                row_index = 56, 
                                col_index = 56, 
                                header = '', 
                                value = '', 
                                message = '', )
                            ]
                        }, 
                    invalid_value_errors = {
                        'key' : [
                            
                            ]
                        }, 
                    already_existing_uri_errors = {
                        'key' : [
                            
                            ]
                        }, 
                    duplicate_uri_errors = {
                        'key' : [
                            openapi_client.models.csv_duplicate_uri_error.CSVDuplicateURIError(
                                row_index = 56, 
                                col_index = 56, 
                                header = '', 
                                value = '', 
                                previous_row = 56, 
                                message = '', )
                            ]
                        }, 
                    invalid_row_size_errors = {
                        'key' : [
                            
                            ]
                        }, 
                    invalid_date_errors = {
                        'key' : [
                            
                            ]
                        }, 
                    nb_object_imported = 56, 
                    validation_token = '', 
                    csv_header = openapi_client.models.csv_header.CsvHeader(
                        columns = [
                            ''
                            ], 
                        real_csv_header_length = 56, ), ),
                validation_token = '',
                nb_lines_imported = 56
            )
        else:
            return CSVValidationDTO(
        )
        """

    def testCSVValidationDTO(self):
        """Test CSVValidationDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
