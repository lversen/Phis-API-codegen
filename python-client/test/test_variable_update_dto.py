# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.variable_update_dto import VariableUpdateDTO

class TestVariableUpdateDTO(unittest.TestCase):
    """VariableUpdateDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VariableUpdateDTO:
        """Test VariableUpdateDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VariableUpdateDTO`
        """
        model = VariableUpdateDTO()
        if include_optional:
            return VariableUpdateDTO(
                uri = '',
                name = 'Plant_Height',
                alternative_name = 'Plant_Height_Estimation_Cm',
                description = 'Describe the height of a plant.',
                entity = 'http://opensilex.dev/set/variables/entity/Plant',
                entity_of_interest = 'http://opensilex.dev/opensilex/id/plantMaterialLot#SL_001',
                characteristic = 'http://opensilex.dev/set/variables/characteristic/Height',
                trait = 'http://purl.obolibrary.org/obo/TO_0002644',
                trait_name = 'dry matter digestibility',
                method = 'http://opensilex.dev/set/variables/method/Estimation',
                unit = 'http://opensilex.dev/set/variables/unit/centimeter',
                species = http://www.phenome-fppn.fr/id/species/zeamays,
                datatype = 'http://www.w3.org/2001/XMLSchema#integer',
                time_interval = 'minutes',
                sampling_interval = 'minutes',
                exact_match = [
                    ''
                    ],
                close_match = [
                    ''
                    ],
                broad_match = [
                    ''
                    ],
                narrow_match = [
                    ''
                    ]
            )
        else:
            return VariableUpdateDTO(
                uri = '',
                name = 'Plant_Height',
                entity = 'http://opensilex.dev/set/variables/entity/Plant',
                characteristic = 'http://opensilex.dev/set/variables/characteristic/Height',
                method = 'http://opensilex.dev/set/variables/method/Estimation',
                unit = 'http://opensilex.dev/set/variables/unit/centimeter',
                datatype = 'http://www.w3.org/2001/XMLSchema#integer',
        )
        """

    def testVariableUpdateDTO(self):
        """Test VariableUpdateDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
