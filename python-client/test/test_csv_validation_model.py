# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.csv_validation_model import CSVValidationModel

class TestCSVValidationModel(unittest.TestCase):
    """CSVValidationModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CSVValidationModel:
        """Test CSVValidationModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CSVValidationModel`
        """
        model = CSVValidationModel()
        if include_optional:
            return CSVValidationModel(
                missing_headers = [
                    ''
                    ],
                empty_headers = [
                    56
                    ],
                invalid_header_uris = {
                    'key' : ''
                    },
                datatype_errors = {
                    'key' : [
                        openapi_client.models.csv_datatype_error.CSVDatatypeError(
                            row_index = 56, 
                            col_index = 56, 
                            header = '', 
                            value = '', 
                            datatype = '', 
                            message = '', )
                        ]
                    },
                uri_not_found_errors = {
                    'key' : [
                        openapi_client.models.csvuri_not_found_error.CSVURINotFoundError(
                            row_index = 56, 
                            col_index = 56, 
                            header = '', 
                            value = '', 
                            rdf_type = '', 
                            object_uri = '', 
                            message = '', )
                        ]
                    },
                invalid_uri_errors = {
                    'key' : [
                        openapi_client.models.csv_cell.CSVCell(
                            row_index = 56, 
                            col_index = 56, 
                            header = '', 
                            value = '', 
                            message = '', )
                        ]
                    },
                missing_required_value_errors = {
                    'key' : [
                        openapi_client.models.csv_cell.CSVCell(
                            row_index = 56, 
                            col_index = 56, 
                            header = '', 
                            value = '', 
                            message = '', )
                        ]
                    },
                invalid_value_errors = {
                    'key' : [
                        openapi_client.models.csv_cell.CSVCell(
                            row_index = 56, 
                            col_index = 56, 
                            header = '', 
                            value = '', 
                            message = '', )
                        ]
                    },
                already_existing_uri_errors = {
                    'key' : [
                        openapi_client.models.csv_cell.CSVCell(
                            row_index = 56, 
                            col_index = 56, 
                            header = '', 
                            value = '', 
                            message = '', )
                        ]
                    },
                duplicate_uri_errors = {
                    'key' : [
                        openapi_client.models.csv_duplicate_uri_error.CSVDuplicateURIError(
                            row_index = 56, 
                            col_index = 56, 
                            header = '', 
                            value = '', 
                            previous_row = 56, 
                            message = '', )
                        ]
                    },
                invalid_row_size_errors = {
                    'key' : [
                        openapi_client.models.csv_cell.CSVCell(
                            row_index = 56, 
                            col_index = 56, 
                            header = '', 
                            value = '', 
                            message = '', )
                        ]
                    },
                invalid_date_errors = {
                    'key' : [
                        openapi_client.models.csv_cell.CSVCell(
                            row_index = 56, 
                            col_index = 56, 
                            header = '', 
                            value = '', 
                            message = '', )
                        ]
                    },
                nb_object_imported = 56,
                validation_token = '',
                csv_header = openapi_client.models.csv_header.CsvHeader(
                    columns = [
                        ''
                        ], 
                    real_csv_header_length = 56, )
            )
        else:
            return CSVValidationModel(
        )
        """

    def testCSVValidationModel(self):
        """Test CSVValidationModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
