# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rdf_node import RDFNode

class TestRDFNode(unittest.TestCase):
    """RDFNode unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RDFNode:
        """Test RDFNode
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RDFNode`
        """
        model = RDFNode()
        if include_optional:
            return RDFNode(
                resource = True,
                model = openapi_client.models.model.Model(
                    empty = True, 
                    closed = True, 
                    reader = openapi_client.models.rdf_reader_i.RDFReaderI(), 
                    lock = openapi_client.models.lock.Lock(), 
                    writer = openapi_client.models.rdf_writer_i.RDFWriterI(), 
                    graph = openapi_client.models.graph.Graph(
                        empty = True, 
                        closed = True, 
                        prefix_mapping = openapi_client.models.prefix_mapping.PrefixMapping(
                            ns_prefix_map = {
                                'key' : ''
                                }, ), 
                        transaction_handler = openapi_client.models.transaction_handler.TransactionHandler(), 
                        event_manager = openapi_client.models.graph_event_manager.GraphEventManager(), 
                        capabilities = openapi_client.models.capabilities.Capabilities(), ), 
                    ns_prefix_map = {
                        'key' : ''
                        }, ),
                literal = True,
                anon = True,
                uriresource = True,
                stmt_resource = True
            )
        else:
            return RDFNode(
        )
        """

    def testRDFNode(self):
        """Test RDFNode"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
