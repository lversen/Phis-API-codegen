# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.br_apiv1_single_study_response import BrAPIv1SingleStudyResponse

class TestBrAPIv1SingleStudyResponse(unittest.TestCase):
    """BrAPIv1SingleStudyResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BrAPIv1SingleStudyResponse:
        """Test BrAPIv1SingleStudyResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BrAPIv1SingleStudyResponse`
        """
        model = BrAPIv1SingleStudyResponse()
        if include_optional:
            return BrAPIv1SingleStudyResponse(
                metadata = openapi_client.models.metadata_dto.MetadataDTO(
                    pagination = openapi_client.models.pagination_dto.PaginationDTO(
                        page_size = 56, 
                        current_page = 56, 
                        total_count = 56, 
                        total_pages = 56, 
                        limit_count = 56, 
                        has_next_page = True, ), 
                    status = [
                        openapi_client.models.status_dto.StatusDTO(
                            message = '', 
                            translation_key = '', 
                            translation_values = {
                                'key' : ''
                                }, 
                            level = 'ERROR', )
                        ], 
                    datafiles = [
                        ''
                        ], ),
                result = openapi_client.models.br_apiv1_super_study_dto.BrAPIv1SuperStudyDTO(
                    active = '', 
                    additional_info = {
                        'key' : ''
                        }, 
                    common_crop_name = '', 
                    documentation_url = '', 
                    end_date = '', 
                    location_db_id = '', 
                    location_name = '', 
                    program_db_id = '', 
                    program_name = '', 
                    start_date = '', 
                    study_db_id = '', 
                    study_name = '', 
                    study_type_db_id = '', 
                    study_type_name = '', 
                    trial_db_id = '', 
                    trial_name = '', )
            )
        else:
            return BrAPIv1SingleStudyResponse(
        )
        """

    def testBrAPIv1SingleStudyResponse(self):
        """Test BrAPIv1SingleStudyResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
