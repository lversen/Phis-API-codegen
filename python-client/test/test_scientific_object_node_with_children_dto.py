# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.scientific_object_node_with_children_dto import ScientificObjectNodeWithChildrenDTO

class TestScientificObjectNodeWithChildrenDTO(unittest.TestCase):
    """ScientificObjectNodeWithChildrenDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScientificObjectNodeWithChildrenDTO:
        """Test ScientificObjectNodeWithChildrenDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScientificObjectNodeWithChildrenDTO`
        """
        model = ScientificObjectNodeWithChildrenDTO()
        if include_optional:
            return ScientificObjectNodeWithChildrenDTO(
                uri = '',
                name = '',
                geometry = {"coordinates":[43.618316,3.856912],"type":"Point"},
                rdf_type = '',
                rdf_type_name = '',
                publication_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                creation_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                destruction_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                child_count = 56
            )
        else:
            return ScientificObjectNodeWithChildrenDTO(
        )
        """

    def testScientificObjectNodeWithChildrenDTO(self):
        """Test ScientificObjectNodeWithChildrenDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
