# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.devices_api import DevicesApi


class TestDevicesApi(unittest.TestCase):
    """DevicesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DevicesApi()

    def tearDown(self) -> None:
        pass

    def test_count_device_data(self) -> None:
        """Test case for count_device_data

        Count device data
        """
        pass

    def test_create_device(self) -> None:
        """Test case for create_device

        Create a device
        """
        pass

    def test_delete_device(self) -> None:
        """Test case for delete_device

        Delete a device
        """
        pass

    def test_export_devices(self) -> None:
        """Test case for export_devices

        export devices
        """
        pass

    def test_export_geospatial1(self) -> None:
        """Test case for export_geospatial1

        Export a given list of devices URIs to shapefile
        """
        pass

    def test_export_list(self) -> None:
        """Test case for export_list

        export devices
        """
        pass

    def test_get_device(self) -> None:
        """Test case for get_device

        Get device detail
        """
        pass

    def test_get_device_by_uris(self) -> None:
        """Test case for get_device_by_uris

        Get devices by uris
        """
        pass

    def test_get_device_data_files_provenances(self) -> None:
        """Test case for get_device_data_files_provenances

        Get provenances of datafiles linked to this device
        """
        pass

    def test_get_device_data_provenances(self) -> None:
        """Test case for get_device_data_provenances

        Get provenances of data that have been measured on this device
        """
        pass

    def test_get_device_variables(self) -> None:
        """Test case for get_device_variables

        Get variables linked to the device
        """
        pass

    def test_get_devices_by_facility(self) -> None:
        """Test case for get_devices_by_facility

        Get devices by facility
        """
        pass

    def test_import_csv(self) -> None:
        """Test case for import_csv

        Import a CSV file with one device per line
        """
        pass

    def test_search_device_data(self) -> None:
        """Test case for search_device_data

        Search device data
        """
        pass

    def test_search_device_datafiles(self) -> None:
        """Test case for search_device_datafiles

        Search device datafiles descriptions
        """
        pass

    def test_search_devices(self) -> None:
        """Test case for search_devices

        Search devices
        """
        pass

    def test_update_device(self) -> None:
        """Test case for update_device

        Update a device
        """
        pass

    def test_validate_csv1(self) -> None:
        """Test case for validate_csv1

        Validate the import of a CSV file with one device per line
        """
        pass


if __name__ == '__main__':
    unittest.main()
