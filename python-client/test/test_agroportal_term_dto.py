# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.agroportal_term_dto import AgroportalTermDTO

class TestAgroportalTermDTO(unittest.TestCase):
    """AgroportalTermDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AgroportalTermDTO:
        """Test AgroportalTermDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AgroportalTermDTO`
        """
        model = AgroportalTermDTO()
        if include_optional:
            return AgroportalTermDTO(
                id = '',
                name = '',
                synonym = [
                    ''
                    ],
                definitions = [
                    ''
                    ],
                ontology_name = '',
                obsolete = True,
                type = '',
                links = openapi_client.models.agroportal_links_model.AgroportalLinksModel(
                    self = '', 
                    ontology = '', 
                    children = '', 
                    parents = '', 
                    descendants = '', 
                    ancestors = '', 
                    instances = '', 
                    tree = '', 
                    notes = '', 
                    ui = '', )
            )
        else:
            return AgroportalTermDTO(
                id = '',
                ontology_name = '',
        )
        """

    def testAgroportalTermDTO(self):
        """Test AgroportalTermDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
