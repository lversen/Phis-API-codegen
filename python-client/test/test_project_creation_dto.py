# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.project_creation_dto import ProjectCreationDTO

class TestProjectCreationDTO(unittest.TestCase):
    """ProjectCreationDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectCreationDTO:
        """Test ProjectCreationDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectCreationDTO`
        """
        model = ProjectCreationDTO()
        if include_optional:
            return ProjectCreationDTO(
                uri = '',
                publisher = openapi_client.models.user_get_dto.UserGetDTO(
                    uri = 'http://opensilex.dev/users#jean.michel.inrae', 
                    email = 'jean.michel@example.com', 
                    language = 'en', 
                    admin = False, 
                    first_name = 'Jean', 
                    last_name = 'Michel', 
                    linked_person = 'http://opensilex.dev/person#Jean.Michel.mistea', 
                    enable = True, 
                    favorites = test, ),
                publication_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = 'DROught-tolerant yielding PlantS',
                shortname = 'DROPS',
                start_date = 'Sat Feb 20 01:00:00 CET 2010',
                end_date = 'Fri Feb 20 01:00:00 CET 2015',
                description = 'DROPS aims at developing novel methods....',
                objective = 'Developing novel methods and strategies for genetic yield improvement under dry environments and for enhanced plant water-use efficiency.',
                financial_funding = 'European Union',
                website = 'https://www.inrae.fr/dropsproject',
                related_projects = [
                    ''
                    ],
                coordinators = [
                    ''
                    ],
                scientific_contacts = [
                    ''
                    ],
                administrative_contacts = [
                    ''
                    ]
            )
        else:
            return ProjectCreationDTO(
                name = 'DROught-tolerant yielding PlantS',
                start_date = 'Sat Feb 20 01:00:00 CET 2010',
        )
        """

    def testProjectCreationDTO(self):
        """Test ProjectCreationDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
