# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_provenance_model import DataProvenanceModel

class TestDataProvenanceModel(unittest.TestCase):
    """DataProvenanceModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataProvenanceModel:
        """Test DataProvenanceModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataProvenanceModel`
        """
        model = DataProvenanceModel()
        if include_optional:
            return DataProvenanceModel(
                uri = 'http://opensilex.dev/id/provenance/provenancelabel',
                prov_used = [
                    openapi_client.models.prov_entity_model.ProvEntityModel(
                        uri = '', 
                        rdf_type = '', )
                    ],
                prov_was_associated_with = [
                    openapi_client.models.prov_entity_model.ProvEntityModel(
                        uri = '', 
                        rdf_type = '', )
                    ],
                settings = {
                    'key' : None
                    },
                experiments = [
                    ''
                    ]
            )
        else:
            return DataProvenanceModel(
                uri = 'http://opensilex.dev/id/provenance/provenancelabel',
        )
        """

    def testDataProvenanceModel(self):
        """Test DataProvenanceModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
