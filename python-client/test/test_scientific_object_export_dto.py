# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.scientific_object_export_dto import ScientificObjectExportDTO

class TestScientificObjectExportDTO(unittest.TestCase):
    """ScientificObjectExportDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScientificObjectExportDTO:
        """Test ScientificObjectExportDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScientificObjectExportDTO`
        """
        model = ScientificObjectExportDTO()
        if include_optional:
            return ScientificObjectExportDTO(
                included_uris = [
                    ''
                    ],
                page = 56,
                lang = '',
                rdf_types = [
                    ''
                    ],
                order_by = name=asc,
                page_size = 56,
                uris = [
                    ''
                    ],
                excluded_uris = [
                    ''
                    ],
                experiment = '',
                name = '',
                parent = '',
                germplasm = [
                    ''
                    ],
                factor_levels = [
                    ''
                    ],
                facility = '',
                existence_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                creation_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
            )
        else:
            return ScientificObjectExportDTO(
        )
        """

    def testScientificObjectExportDTO(self):
        """Test ScientificObjectExportDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
