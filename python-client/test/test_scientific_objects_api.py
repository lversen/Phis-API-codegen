# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.scientific_objects_api import ScientificObjectsApi


class TestScientificObjectsApi(unittest.TestCase):
    """ScientificObjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ScientificObjectsApi()

    def tearDown(self) -> None:
        pass

    def test_count_scientific_objects(self) -> None:
        """Test case for count_scientific_objects

        Count scientific objects
        """
        pass

    def test_create_scientific_object(self) -> None:
        """Test case for create_scientific_object

        Create a scientific object for the given experiment
        """
        pass

    def test_delete_scientific_object(self) -> None:
        """Test case for delete_scientific_object

        Delete a scientific object
        """
        pass

    def test_export_csv(self) -> None:
        """Test case for export_csv

        Export a given list of scientific object URIs to csv data file
        """
        pass

    def test_export_geospatial2(self) -> None:
        """Test case for export_geospatial2

        Export a given list of scientific object URIs to shapefile or geojson
        """
        pass

    def test_get_scientific_object_data_files_provenances(self) -> None:
        """Test case for get_scientific_object_data_files_provenances

        Get provenances of datafiles linked to this scientific object
        """
        pass

    def test_get_scientific_object_data_provenances(self) -> None:
        """Test case for get_scientific_object_data_provenances

        Get provenances of data that have been measured on this scientific object
        """
        pass

    def test_get_scientific_object_detail(self) -> None:
        """Test case for get_scientific_object_detail

        Get scientific object detail
        """
        pass

    def test_get_scientific_object_detail_by_experiments(self) -> None:
        """Test case for get_scientific_object_detail_by_experiments

        Get scientific object detail for each experiments, a null value for experiment in response means a properties defined outside of any experiment (shared object).
        """
        pass

    def test_get_scientific_object_variables(self) -> None:
        """Test case for get_scientific_object_variables

        Get variables measured on this scientific object
        """
        pass

    def test_get_scientific_objects_children(self) -> None:
        """Test case for get_scientific_objects_children

        Get list of scientific object children
        """
        pass

    def test_get_scientific_objects_list_by_uris(self) -> None:
        """Test case for get_scientific_objects_list_by_uris

        Get scientific objet list of a given experiment URI
        """
        pass

    def test_get_used_types(self) -> None:
        """Test case for get_used_types

        get used scientific object types
        """
        pass

    def test_import_csv1(self) -> None:
        """Test case for import_csv1

        Import a CSV file for the given experiment URI and scientific object type.
        """
        pass

    def test_search_scientific_objects(self) -> None:
        """Test case for search_scientific_objects

        Search list of scientific objects
        """
        pass

    def test_search_scientific_objects_with_geometry_list_by_uris(self) -> None:
        """Test case for search_scientific_objects_with_geometry_list_by_uris

        Get scientific objet list with geometry of a given experiment URI
        """
        pass

    def test_update_scientific_object(self) -> None:
        """Test case for update_scientific_object

        Update a scientific object for the given experiment
        """
        pass

    def test_validate_csv3(self) -> None:
        """Test case for validate_csv3

        Validate a CSV file for the given experiment URI and scientific object type.
        """
        pass


if __name__ == '__main__':
    unittest.main()
