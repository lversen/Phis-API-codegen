# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.metric_period_dto import MetricPeriodDTO

class TestMetricPeriodDTO(unittest.TestCase):
    """MetricPeriodDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetricPeriodDTO:
        """Test MetricPeriodDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetricPeriodDTO`
        """
        model = MetricPeriodDTO()
        if include_optional:
            return MetricPeriodDTO(
                start_date = 56,
                end_date = 56,
                scientific_object_list = openapi_client.models.count_list_item_period_dto.CountListItemPeriodDTO(
                    total_difference_item_count = 56, 
                    difference_items = [
                        openapi_client.models.count_item_period_dto.CountItemPeriodDTO(
                            difference_count = 56, 
                            uri = '', 
                            type = '', 
                            name = '', 
                            count = 56, )
                        ], 
                    name = '', 
                    type = '', 
                    total_items_count = 56, 
                    items = [
                        openapi_client.models.count_item_dto.CountItemDTO(
                            uri = '', 
                            name = '', 
                            type = '', 
                            count = 56, )
                        ], ),
                experiment_list = openapi_client.models.count_list_item_period_dto.CountListItemPeriodDTO(
                    total_difference_item_count = 56, 
                    difference_items = [
                        openapi_client.models.count_item_period_dto.CountItemPeriodDTO(
                            difference_count = 56, 
                            uri = '', 
                            type = '', 
                            name = '', 
                            count = 56, )
                        ], 
                    name = '', 
                    type = '', 
                    total_items_count = 56, 
                    items = [
                        openapi_client.models.count_item_dto.CountItemDTO(
                            uri = '', 
                            name = '', 
                            type = '', 
                            count = 56, )
                        ], ),
                data_list = openapi_client.models.count_list_item_period_dto.CountListItemPeriodDTO(
                    total_difference_item_count = 56, 
                    difference_items = [
                        openapi_client.models.count_item_period_dto.CountItemPeriodDTO(
                            difference_count = 56, 
                            uri = '', 
                            type = '', 
                            name = '', 
                            count = 56, )
                        ], 
                    name = '', 
                    type = '', 
                    total_items_count = 56, 
                    items = [
                        openapi_client.models.count_item_dto.CountItemDTO(
                            uri = '', 
                            name = '', 
                            type = '', 
                            count = 56, )
                        ], ),
                device_list = openapi_client.models.count_list_item_period_dto.CountListItemPeriodDTO(
                    total_difference_item_count = 56, 
                    difference_items = [
                        openapi_client.models.count_item_period_dto.CountItemPeriodDTO(
                            difference_count = 56, 
                            uri = '', 
                            type = '', 
                            name = '', 
                            count = 56, )
                        ], 
                    name = '', 
                    type = '', 
                    total_items_count = 56, 
                    items = [
                        openapi_client.models.count_item_dto.CountItemDTO(
                            uri = '', 
                            name = '', 
                            type = '', 
                            count = 56, )
                        ], ),
                germplasm_list = openapi_client.models.count_list_item_period_dto.CountListItemPeriodDTO(
                    total_difference_item_count = 56, 
                    difference_items = [
                        openapi_client.models.count_item_period_dto.CountItemPeriodDTO(
                            difference_count = 56, 
                            uri = '', 
                            type = '', 
                            name = '', 
                            count = 56, )
                        ], 
                    name = '', 
                    type = '', 
                    total_items_count = 56, 
                    items = [
                        openapi_client.models.count_item_dto.CountItemDTO(
                            uri = '', 
                            name = '', 
                            type = '', 
                            count = 56, )
                        ], )
            )
        else:
            return MetricPeriodDTO(
        )
        """

    def testMetricPeriodDTO(self):
        """Test MetricPeriodDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
