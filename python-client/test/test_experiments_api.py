# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.experiments_api import ExperimentsApi


class TestExperimentsApi(unittest.TestCase):
    """ExperimentsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ExperimentsApi()

    def tearDown(self) -> None:
        pass

    def test_create_experiment(self) -> None:
        """Test case for create_experiment

        Add an experiment
        """
        pass

    def test_delete_experiment(self) -> None:
        """Test case for delete_experiment

        Delete an experiment
        """
        pass

    def test_export_experiment_data_list(self) -> None:
        """Test case for export_experiment_data_list

        export experiment data
        """
        pass

    def test_get_available_facilities(self) -> None:
        """Test case for get_available_facilities

        Get facilities available for an experiment
        """
        pass

    def test_get_available_factors(self) -> None:
        """Test case for get_available_factors

        Get factors with their levels associated to an experiment
        """
        pass

    def test_get_available_species(self) -> None:
        """Test case for get_available_species

        Get species present in an experiment
        """
        pass

    def test_get_experiment(self) -> None:
        """Test case for get_experiment

        Get an experiment
        """
        pass

    def test_get_experiments_by_uris(self) -> None:
        """Test case for get_experiments_by_uris

        Get experiments URIs
        """
        pass

    def test_get_used_variables1(self) -> None:
        """Test case for get_used_variables1

        Get variables involved in an experiment
        """
        pass

    def test_import_csv_data1(self) -> None:
        """Test case for import_csv_data1

        Import a CSV file for the given experiment URI and scientific object type.
        """
        pass

    def test_search_experiment_data_list(self) -> None:
        """Test case for search_experiment_data_list

        Search data
        """
        pass

    def test_search_experiment_provenances(self) -> None:
        """Test case for search_experiment_provenances

        Get provenances involved in an experiment
        """
        pass

    def test_search_experiments(self) -> None:
        """Test case for search_experiments

        Search experiments
        """
        pass

    def test_update_experiment(self) -> None:
        """Test case for update_experiment

        Update an experiment
        """
        pass

    def test_validate_csv2(self) -> None:
        """Test case for validate_csv2

        Import a CSV file for the given experiment URI and scientific object type.
        """
        pass


if __name__ == '__main__':
    unittest.main()
