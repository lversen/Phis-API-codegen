# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.variable_details_dto import VariableDetailsDTO

class TestVariableDetailsDTO(unittest.TestCase):
    """VariableDetailsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VariableDetailsDTO:
        """Test VariableDetailsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VariableDetailsDTO`
        """
        model = VariableDetailsDTO()
        if include_optional:
            return VariableDetailsDTO(
                uri = 'http://opensilex.dev/set/variables/Plant_Height',
                name = 'Plant_Height',
                alternative_name = 'Plant_Height_Estimation_Cm',
                description = 'Describe the height of a plant.',
                entity = openapi_client.models.entity_get_dto.EntityGetDTO(
                    uri = 'http://opensilex.dev/set/variables/entity/Plant', 
                    name = 'Plant', ),
                entity_of_interest = openapi_client.models.interest_entity_get_dto.InterestEntityGetDTO(
                    uri = 'http://opensilex.dev/set/variables/entity_of_interest/Plot', 
                    name = 'Plot', ),
                characteristic = openapi_client.models.characteristic_get_dto.CharacteristicGetDTO(
                    uri = 'http://opensilex.dev/set/variables/characteristic/Height', 
                    name = 'Height', ),
                trait = 'http://purl.obolibrary.org/obo/TO_0002644',
                trait_name = 'dry matter digestibility',
                method = openapi_client.models.method_get_dto.MethodGetDTO(
                    uri = 'http://opensilex.dev/set/variables/method/ImageAnalysis', 
                    name = 'ImageAnalysis', ),
                unit = openapi_client.models.unit_details_dto.UnitDetailsDTO(
                    uri = 'http://opensilex.dev/set/variables/unit/Centimeter', 
                    name = 'Centimeter', 
                    description = 'A common unit for describing a length', 
                    symbol = 'cm', 
                    alternative_symbol = 'cm', 
                    exact_match = [
                        ''
                        ], 
                    close_match = [
                        ''
                        ], 
                    broad_match = [
                        ''
                        ], 
                    narrow_match = [
                        ''
                        ], 
                    publisher = openapi_client.models.user_get_dto.UserGetDTO(
                        uri = 'http://opensilex.dev/users#jean.michel.inrae', 
                        email = 'jean.michel@example.com', 
                        language = 'en', 
                        admin = False, 
                        first_name = 'Jean', 
                        last_name = 'Michel', 
                        linked_person = 'http://opensilex.dev/person#Jean.Michel.mistea', 
                        enable = True, 
                        favorites = test, ), 
                    publication_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    from_shared_resource_instance = openapi_client.models.shared_resource_instance_dto.SharedResourceInstanceDTO(
                        uri = '', 
                        api_url = '', 
                        label = '', ), ),
                species = http://www.phenome-fppn.fr/id/species/zeamays,
                time_interval = 'minutes',
                sampling_interval = 'minutes',
                datatype = 'http://www.w3.org/2001/XMLSchema#integer',
                exact_match = [
                    ''
                    ],
                close_match = [
                    ''
                    ],
                broad_match = [
                    ''
                    ],
                narrow_match = [
                    ''
                    ],
                publisher = openapi_client.models.user_get_dto.UserGetDTO(
                    uri = 'http://opensilex.dev/users#jean.michel.inrae', 
                    email = 'jean.michel@example.com', 
                    language = 'en', 
                    admin = False, 
                    first_name = 'Jean', 
                    last_name = 'Michel', 
                    linked_person = 'http://opensilex.dev/person#Jean.Michel.mistea', 
                    enable = True, 
                    favorites = test, ),
                publication_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                from_shared_resource_instance = openapi_client.models.shared_resource_instance_dto.SharedResourceInstanceDTO(
                    uri = '', 
                    api_url = '', 
                    label = '', )
            )
        else:
            return VariableDetailsDTO(
        )
        """

    def testVariableDetailsDTO(self):
        """Test VariableDetailsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
