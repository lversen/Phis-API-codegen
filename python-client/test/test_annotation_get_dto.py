# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.7-rdg
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.annotation_get_dto import AnnotationGetDTO

class TestAnnotationGetDTO(unittest.TestCase):
    """AnnotationGetDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnnotationGetDTO:
        """Test AnnotationGetDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnnotationGetDTO`
        """
        model = AnnotationGetDTO()
        if include_optional:
            return AnnotationGetDTO(
                uri = 'http://www.opensilex.org/annotations/12590c87-1c34-426b-a231-beb7acb33415',
                description = 'The pest attack lasted 20 minutes',
                targets = [
                    ''
                    ],
                motivation = openapi_client.models.motivation_get_dto.MotivationGetDTO(
                    uri = 'http://www.w3.org/ns/oa#describing', 
                    name = 'describing', ),
                published = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                publisher = 'http://opensilex.dev/users#Admin.OpenSilex'
            )
        else:
            return AnnotationGetDTO(
        )
        """

    def testAnnotationGetDTO(self):
        """Test AnnotationGetDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
